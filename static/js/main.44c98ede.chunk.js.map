{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["intId","Clock","state","hasClock","time","Date","toUTCString","slice","window","setInterval","today","console","info","setState","previousState","prevProps","this","props","name","debug","clearInterval","className","React","Component","timerId","App","clockName","makeRenameInterval","document","addEventListener","event","preventDefault","removeEventListener","value","now","toString","getRandomName","ReactDOM","render","getElementById"],"mappings":"6NAWIA,EAAuB,KAEdC,EAAb,4MACEC,MAAyB,CACvBC,UAAU,EACVC,MAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAH/C,uDAME,WAAqB,IAAD,OAClBP,EAAQQ,OAAOC,aAAY,WACzB,IAAMC,GAAQ,IAAIL,MAAOC,cAAcC,OAAO,IAAK,GAEnDC,OAAOG,QAAQC,KAAKF,GACpB,EAAKG,UAAS,SAACC,GAAD,mBAAC,eAAwBA,GAAzB,IAAwCV,KAAMM,SAC3D,OAZP,gCAeE,SAAmBK,GACbC,KAAKC,MAAMC,OAASH,EAAUG,MAChCV,OAAOG,QAAQQ,MAAf,uBAAqCJ,EAAUG,KAA/C,eAA0DF,KAAKC,MAAMC,SAjB3E,kCAqBE,WACEV,OAAOY,cAAcpB,KAtBzB,oBAyBE,WACE,IAAQkB,EAASF,KAAKC,MAAdC,KACAd,EAASY,KAAKd,MAAdE,KAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAEF,YACD,sBAAMG,UAAU,cAAhB,SACGjB,WApCX,GAA2BkB,IAAMC,WCEjC,IAAIC,EAAyB,KAEhBC,EAAb,4MACEvB,MAAyB,CACvBC,UAAU,EACVuB,UAAW,WAHf,uDAME,WAAqB,IAAD,OAClBV,KAAKW,qBAELC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKlB,UAAS,SAACC,GAAD,mBAAC,eAAwBA,GAAzB,IAAwCX,UAAU,OAChEK,OAAOY,cAAcI,MAGvBI,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBACD,EAAK7B,MAAMC,WACd,EAAKU,UAAS,SAACC,GAAD,mBAAC,eACVA,GADS,IAEZX,UAAU,OAEZ,EAAKwB,2BAtBb,kCA2BE,WACEC,SAASI,oBAAoB,eAAe,eAC5CJ,SAASI,oBAAoB,SAAS,iBA7B1C,gCAgCE,WAAsB,IAAD,OACnBZ,cAAcI,GACdA,EAAUhB,OAAOC,aAAY,WAC3B,IAAMiB,EAhDZ,WACE,IAAMO,EAAQ5B,KAAK6B,MAAMC,WAAW5B,OAAO,GAE3C,MAAM,SAAN,OAAgB0B,GA6CMG,GAElB,EAAKvB,UAAS,SAACC,GAAD,mBAAC,eAAwBA,GAAzB,IAAwCY,mBACrD,QAtCP,oBAyCE,WACE,MAAgCV,KAAKd,MAA7BC,EAAR,EAAQA,SAAUuB,EAAlB,EAAkBA,UAElB,OACE,sBAAKL,UAAU,MAAf,UACE,6CACClB,GAAY,cAAC,EAAD,CAAOe,KAAMQ,WA/ClC,GAAyBJ,IAAMC,WCd/Bc,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,W","file":"static/js/main.44c98ede.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  hasClock: boolean;\n  time: string;\n};\n\ntype Props = {\n  name: string;\n};\n\nlet intId: number | null = null;\n\nexport class Clock extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    time: new Date().toUTCString().slice(-12, -4),\n  };\n\n  componentDidMount() {\n    intId = window.setInterval(() => {\n      const today = new Date().toUTCString().slice(-12, -4);\n\n      window.console.info(today);\n      this.setState((previousState) => ({ ...previousState, time: today }));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      window.console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(intId as number);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {time}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nlet timerId: number | null = null;\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    this.makeRenameInterval();\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState((previousState) => ({ ...previousState, hasClock: false }));\n      window.clearInterval(timerId as number);\n    });\n\n    document.addEventListener('click', (event: MouseEvent) => {\n      event.preventDefault();\n      if (!this.state.hasClock) {\n        this.setState((previousState) => ({\n          ...previousState,\n          hasClock: true,\n        }));\n        this.makeRenameInterval();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', () => { });\n    document.removeEventListener('click', () => { });\n  }\n\n  makeRenameInterval() {\n    clearInterval(timerId as number);\n    timerId = window.setInterval(() => {\n      const clockName = getRandomName();\n\n      this.setState((previousState) => ({ ...previousState, clockName }));\n    }, 3300);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}